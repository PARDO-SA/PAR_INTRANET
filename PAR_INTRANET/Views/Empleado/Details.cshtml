@model PAR_INTRANET.Models.Clases.Empleado
@if (Session["Codusr"] == null)
{
    <script src="~/Scripts/jquery-3.3.1.js"></script>
    <script src="~/Scripts/sweetalert2.js"></script>
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/sweetalert2.min.css" rel="stylesheet" />

    <script type="text/javascript">
        let timerInterval
        swal({
            type: 'error',
            title: 'Sesión Expirada',
            html: 'Serás redirigido en <strong></strong> milisegundos.',
            allowOutsideClick: false,
            allowEscapeKey: false,
            heightAuto: false,
            timer: 8000,
            onOpen: () => {
                swal.showLoading()
                timerInterval = setInterval(() => {
                    swal.getContent().querySelector('strong')
                        .textContent = swal.getTimerLeft()
                }, 100)
            },
            onClose: () => {
                clearInterval(timerInterval);
                redireccion();
            }
        }).then((result) => {
            if (
                // Read more about handling dismissals
                result.dismiss === swal.DismissReason.timer
            ) {
                console.log('I was closed by the timer')
            }
        })


        function redireccion() {
            window.location.href = "/Login/logueo";
        }

    </script>

}
@{
    ViewBag.Title = "Prueba";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

    <div class="col-md-6">
        <div class="box box-info">
            <div class="box-header with-border">
                <h3 class="box-title">DETALLE DE EMPLEADO</h3>
            </div>
            <!-- /.box-header -->
            <!-- form start -->
            <div class="form-horizontal">
                <div class="box-body">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Legajo, htmlAttributes: new { @class = "col-sm-2 control-label" })

                        <div class="col-sm-10">
                            @Html.DisplayFor(m => m.Legajo, new { htmlAttributes = new { @class = "form-control"} })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Email, htmlAttributes: new { @class = "col-sm-2 control-label" })

                        <div class="col-sm-10">
                            @Html.DisplayFor(m => m.Email, new { htmlAttributes = new { @class = "form-control"} })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Nombre, htmlAttributes: new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-10">
                            @Html.DisplayFor(m => m.Nombre, new { htmlAttributes = new { @class = "form-control"} })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Cuil, htmlAttributes: new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-10">
                            @Html.DisplayFor(m => m.Cuil, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.FuncionP, "FuncionP", htmlAttributes: new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-10">
                            @Html.DisplayFor(m => m.FuncionPri.Descripcion, new { htmlAttributes = new { @class = "form-control"} })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.FuncionS, "FuncionS", htmlAttributes: new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-10">
                            @Html.DisplayFor(m => m.FuncionSec.Descripcion, new { htmlAttributes = new { @class = "form-control"} })
                        </div>
                    </div>


                    <div id="codvendedor" class="form-group">
                        @Html.LabelFor(m => m.CodVen, htmlAttributes: new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-10">
                            @Html.DisplayFor(m => m.CodVen, new { htmlAttributes = new { @class = "form-control"} })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.CodSuc, htmlAttributes: new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-10">
                            @Html.DisplayFor(m => m.Sucursal.Dessuc, new { htmlAttributes = new { @class = "form-control"} })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Inactivo, htmlAttributes: new { @class = "col-sm-2 control-label" })
                        <div class="col-sm-10">
                            @if (Model.Inactivo == false)
                            {
                                @Html.Editor("activo", new { htmlAttributes = new { @class = "input_tabla_activo"} })
                            }
                            else
                            {
                                @Html.Editor("inactivo", new { htmlAttributes = new { @class = "input_tabla_inactivo"} })
                            }
                        </div>
                    </div>
                </div>
                <!-- /.box-body -->
                <div class="box-footer">
                    <input type="button" name="Volver" value="Volver" class="btn btn-danger pull-right" onClick="location.href='/Empleado/Index'">
                </div>
                <!-- /.box-footer -->
            </div>
               
        </div>
    </div>