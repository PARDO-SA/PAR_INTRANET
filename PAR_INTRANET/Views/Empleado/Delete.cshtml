<script src="~/Scripts/jquery-3.3.1.js"></script>
<script src="~/Scripts/sweetalert2.js"></script>
<link href="~/Content/bootstrap.css" rel="stylesheet" />
<link href="~/Content/sweetalert2.min.css" rel="stylesheet" />

@model PAR_INTRANET.Models.Clases.Empleado
@if (Session["Codusr"] == null)
{
    <script type="text/javascript">
        let timerInterval
        swal({
            type: 'error',
            title: 'Sesión Expirada',
            html: 'Serás redirigido en <strong></strong> milisegundos.',
            allowOutsideClick: false,
            allowEscapeKey: false,
            heightAuto: false,
            timer: 8000,
            onOpen: () => {
                swal.showLoading()
                timerInterval = setInterval(() => {
                    swal.getContent().querySelector('strong')
                        .textContent = swal.getTimerLeft()
                }, 100)
            },
            onClose: () => {
                clearInterval(timerInterval);
                redireccion();
            }
        }).then((result) => {
            if (
                // Read more about handling dismissals
                result.dismiss === swal.DismissReason.timer
            ) {
                console.log('I was closed by the timer')
            }
        })


        function redireccion() {
            window.location.href = "/Login/logueo";
        }

    </script>
}

@{
    ViewBag.Title = "Delete";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="col-md-6">
    <div class="box box-info">
        <div class="box-header with-border">
            <h3 class="box-title">BAJA DE EMPLEADO</h3>
        </div>
        <!-- /.box-header -->
        <!-- form start -->
        @using (Html.BeginForm("Delete", "Empleado", FormMethod.Post, new { @id = "empleDelete", role = "form", enctype = "multipart/form-data", onsubmit = "Mensaje()", @class = "form-horizontal" }))
        {
            @Html.AntiForgeryToken()
        <div class="box-body">
            <div class="form-group">
                @Html.LabelFor(model => model.Legajo, htmlAttributes: new { @class = "col-sm-2 control-label" })

                <div class="col-sm-10">
                    @Html.EditorFor(model => model.Legajo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(m => m.Legajo, "", new { @class = "text-danger  " })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "col-sm-2 control-label" })

                <div class="col-sm-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger  " })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(m => m.Nombre, "", new { @class = "text-danger  " })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Cuil, htmlAttributes: new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.EditorFor(model => model.Cuil, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(m => m.Cuil, "", new { @class = "text-danger  " })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FuncionP, "FuncionP", htmlAttributes: new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.EditorFor(model => model.FuncionPri.Descripcion, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FuncionS, "FuncionS", htmlAttributes: new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.EditorFor(model => model.FuncionSec.Descripcion, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </div>
            </div>


            <div id="codvendedor" class="form-group">
                @Html.LabelFor(model => model.CodVen, htmlAttributes: new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.EditorFor(model => model.CodVen, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CodSuc, htmlAttributes: new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.EditorFor(model => model.Sucursal.Dessuc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Inactivo, htmlAttributes: new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @if (Model.Inactivo == false)
                    {
                        @Html.Editor("activo", new { htmlAttributes = new { @class = "input_tabla_activo", @readonly = "readonly" } })
                    }
                    else
                    {
                        @Html.Editor("inactivo", new { htmlAttributes = new { @class = "input_tabla_inactivo", @readonly = "readonly" } })
                    }
                </div>
            </div>

          

        </div>
            <!-- /.box-body -->
        <div class="box-footer">
            <input type="button" name="Cancelar" value="Cancelar" class="btn btn-danger" onClick="location.href='/Empleado/Index'">
            <!--<button type="submit" class="btn btn-default">Cancelar</button>-->
            <button type="submit" class="btn btn-info pull-right">Eliminar Empleado</button>
        </div>
            <!-- /.box-footer -->
        }
    </div>
</div>


<script type="text/javascript">
    function Mensaje() {
        swal({
        heightAuto:false,
        position: 'top-end',
        type: 'success',
        title: 'Empleado Eliminado',
        showConfirmButton: false,
        timer: 4000
        })

        return true;
    }
</script>