@model PAR_INTRANET.Models.Clases.Empleado
@if (Session["Codusr"] == null)
{
    <script src="~/Scripts/jquery-3.3.1.js"></script>
    <script src="~/Scripts/sweetalert2.js"></script>
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/sweetalert2.min.css" rel="stylesheet" />

    <script type="text/javascript">
        let timerInterval
        swal({
            type: 'error',
            title: 'Sesión Expirada',
            html: 'Serás redirigido en <strong></strong> milisegundos.',
            allowOutsideClick: false,
            allowEscapeKey: false,
            heightAuto: false,
            timer: 8000,
            onOpen: () => {
                swal.showLoading()
                timerInterval = setInterval(() => {
                    swal.getContent().querySelector('strong')
                        .textContent = swal.getTimerLeft()
                }, 100)
            },
            onClose: () => {
                clearInterval(timerInterval);
                redireccion();
            }
        }).then((result) => {
            if (
                // Read more about handling dismissals
                result.dismiss === swal.DismissReason.timer
            ) {
                console.log('I was closed by the timer')
            }
        })


        function redireccion() {
            window.location.href = "/Login/logueo";
        }

    </script>

}
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 align="center">Edición de Empleado</h2>

@using (Html.BeginForm("Edit", "Empleado", FormMethod.Post, new { @id = "registerFormId", role = "form", enctype = "multipart/form-data", onsubmit = "Validar()" }))
{
    @Html.AntiForgeryToken()
    HtmlHelper.UnobtrusiveJavaScriptEnabled = false;

    <div class="caja_edit">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <table class="tabla_edit">
            <tr>
                <td> @Html.LabelFor(model => model.Legajo, htmlAttributes: new { @class = "lbl_tabla" })</td>
                <td>
                    @Html.EditorFor(model => model.Legajo, new { htmlAttributes = new { @class = "input_tabla_disabled", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Legajo, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td> @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "lbl_tabla" })</td>
                <td>
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "input_tabla" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "lbl_tabla" })</td>
                <td>
                    @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "input_tabla" } })
                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.Sucursal.Dessuc, htmlAttributes: new { @class = "lbl_tabla" })</td>
                <td>
                    @Html.DropDownList("CodSuc", null, htmlAttributes: new { @class = "input_tabla" })
                    @Html.ValidationMessageFor(model => model.CodSuc, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>@Html.LabelFor(model => model.FuncionP, htmlAttributes: new { @class = "lbl_tabla" })</td>
                <td>
                    @Html.DropDownList("FuncionP", null, htmlAttributes: new { @class = "input_tabla" })

                    @Html.ValidationMessageFor(model => model.FuncionP, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td>@Html.Label("Vendedor", htmlAttributes: new { @class = "lbl_tabla" })</td>
                <td>
                    @Html.EditorFor(model => model.CodVen, new { htmlAttributes = new { @class = "input_tabla" } })
                    @Html.ValidationMessageFor(model => model.CodVen, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr>
                <td> @Html.Label("Funcion Secundaria", htmlAttributes: new { @class = "lbl_tabla" })</td>
                <td>
                    @Html.DropDownList("FuncionS", null, "--SIN FUNCIÓN SECUNDARIA--", htmlAttributes: new { @class = "input_tabla" })
                    @Html.ValidationMessageFor(model => model.FuncionS, "", new { @class = "text-danger" })
                </td>
            </tr>

            <tr>
                <td>@Html.LabelFor(model => model.Inactivo, htmlAttributes: new { @class = "lbl_tabla" })</td>
                <td>
                    <div class="btn_formgroup" id="status" data-toggle="buttons">
                        @if (Model.Inactivo == false)
                        {
                            <label class="btn btn-default btn-on btn-xs active">
                                @Html.RadioButtonFor(model => model.Inactivo, "false") ACTIVO
                            </label>
                            <label class="btn btn-default btn-off btn-xs ">
                                @Html.RadioButtonFor(model => model.Inactivo, "true") INACTIVO
                            </label>
                        }
                        else
                        {
                            <label class="btn btn-default btn-on btn-xs ">
                                @Html.RadioButtonFor(model => model.Inactivo, "false") ACTIVO
                            </label>
                            <label class="btn btn-default btn-off btn-xs active ">
                                @Html.RadioButtonFor(model => model.Inactivo, "true") INACTIVO
                            </label>
                        }
                    </div>
                </td>
            </tr>
        </table>
        <div class="botones_inf">
            <div class="btn_izq">
                <input type="submit" value="Aplicar Cambios" class="btn btn-primary" />
            </div>
            <div class="btn_der">
                <a href='@Url.Action("Index", "Empleado")'>
                    <img src="~/Content/img/volver.png" title="Borrar" width="130" height="35" />
                </a>
            </div>
        </div>
    </div>
}
<script type="text/javascript">
    function Validar() {
        swal({
            heightAuto: false,
            position: 'top-end',
            type: 'success',
            title: 'Empleado Eliminado',
            showConfirmButton: false,
            timer: 3000
        })

        return true;
    }
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/custom-validator")
}